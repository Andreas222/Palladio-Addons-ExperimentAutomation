/**
 * generated by Xtext 2.13.0
 */
package org.palladiosimulator.experimentautomation.dsl.expAuto.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.palladiosimulator.experimentautomation.dsl.expAuto.ExpAutoPackage;
import org.palladiosimulator.experimentautomation.dsl.expAuto.InitSpecifications;
import org.palladiosimulator.experimentautomation.dsl.expAuto.InitialModel;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Initial Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.InitialModelImpl#getModeltyp <em>Modeltyp</em>}</li>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.InitialModelImpl#getInitSpecifications <em>Init Specifications</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InitialModelImpl extends MinimalEObjectImpl.Container implements InitialModel
{
  /**
   * The default value of the '{@link #getModeltyp() <em>Modeltyp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModeltyp()
   * @generated
   * @ordered
   */
  protected static final String MODELTYP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getModeltyp() <em>Modeltyp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModeltyp()
   * @generated
   * @ordered
   */
  protected String modeltyp = MODELTYP_EDEFAULT;

  /**
   * The cached value of the '{@link #getInitSpecifications() <em>Init Specifications</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitSpecifications()
   * @generated
   * @ordered
   */
  protected InitSpecifications initSpecifications;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitialModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ExpAutoPackage.Literals.INITIAL_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getModeltyp()
  {
    return modeltyp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setModeltyp(String newModeltyp)
  {
    String oldModeltyp = modeltyp;
    modeltyp = newModeltyp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.INITIAL_MODEL__MODELTYP, oldModeltyp, modeltyp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InitSpecifications getInitSpecifications()
  {
    return initSpecifications;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInitSpecifications(InitSpecifications newInitSpecifications, NotificationChain msgs)
  {
    InitSpecifications oldInitSpecifications = initSpecifications;
    initSpecifications = newInitSpecifications;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS, oldInitSpecifications, newInitSpecifications);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInitSpecifications(InitSpecifications newInitSpecifications)
  {
    if (newInitSpecifications != initSpecifications)
    {
      NotificationChain msgs = null;
      if (initSpecifications != null)
        msgs = ((InternalEObject)initSpecifications).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS, null, msgs);
      if (newInitSpecifications != null)
        msgs = ((InternalEObject)newInitSpecifications).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS, null, msgs);
      msgs = basicSetInitSpecifications(newInitSpecifications, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS, newInitSpecifications, newInitSpecifications));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS:
        return basicSetInitSpecifications(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ExpAutoPackage.INITIAL_MODEL__MODELTYP:
        return getModeltyp();
      case ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS:
        return getInitSpecifications();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ExpAutoPackage.INITIAL_MODEL__MODELTYP:
        setModeltyp((String)newValue);
        return;
      case ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS:
        setInitSpecifications((InitSpecifications)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ExpAutoPackage.INITIAL_MODEL__MODELTYP:
        setModeltyp(MODELTYP_EDEFAULT);
        return;
      case ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS:
        setInitSpecifications((InitSpecifications)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ExpAutoPackage.INITIAL_MODEL__MODELTYP:
        return MODELTYP_EDEFAULT == null ? modeltyp != null : !MODELTYP_EDEFAULT.equals(modeltyp);
      case ExpAutoPackage.INITIAL_MODEL__INIT_SPECIFICATIONS:
        return initSpecifications != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (modeltyp: ");
    result.append(modeltyp);
    result.append(')');
    return result.toString();
  }

} //InitialModelImpl

/**
 * generated by Xtext 2.12.0
 */
package org.palladiosimulator.experimentautomation.dsl.expAuto.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.palladiosimulator.experimentautomation.dsl.expAuto.ExpAutoPackage;
import org.palladiosimulator.experimentautomation.dsl.expAuto.NumberOfExperiments;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Number Of Experiments</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.NumberOfExperimentsImpl#getNumberOfRepetitions <em>Number Of Repetitions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NumberOfExperimentsImpl extends MinimalEObjectImpl.Container implements NumberOfExperiments
{
  /**
   * The default value of the '{@link #getNumberOfRepetitions() <em>Number Of Repetitions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumberOfRepetitions()
   * @generated
   * @ordered
   */
  protected static final int NUMBER_OF_REPETITIONS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNumberOfRepetitions() <em>Number Of Repetitions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumberOfRepetitions()
   * @generated
   * @ordered
   */
  protected int numberOfRepetitions = NUMBER_OF_REPETITIONS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NumberOfExperimentsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ExpAutoPackage.Literals.NUMBER_OF_EXPERIMENTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getNumberOfRepetitions()
  {
    return numberOfRepetitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumberOfRepetitions(int newNumberOfRepetitions)
  {
    int oldNumberOfRepetitions = numberOfRepetitions;
    numberOfRepetitions = newNumberOfRepetitions;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.NUMBER_OF_EXPERIMENTS__NUMBER_OF_REPETITIONS, oldNumberOfRepetitions, numberOfRepetitions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ExpAutoPackage.NUMBER_OF_EXPERIMENTS__NUMBER_OF_REPETITIONS:
        return getNumberOfRepetitions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ExpAutoPackage.NUMBER_OF_EXPERIMENTS__NUMBER_OF_REPETITIONS:
        setNumberOfRepetitions((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ExpAutoPackage.NUMBER_OF_EXPERIMENTS__NUMBER_OF_REPETITIONS:
        setNumberOfRepetitions(NUMBER_OF_REPETITIONS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ExpAutoPackage.NUMBER_OF_EXPERIMENTS__NUMBER_OF_REPETITIONS:
        return numberOfRepetitions != NUMBER_OF_REPETITIONS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (numberOfRepetitions: ");
    result.append(numberOfRepetitions);
    result.append(')');
    return result.toString();
  }

} //NumberOfExperimentsImpl

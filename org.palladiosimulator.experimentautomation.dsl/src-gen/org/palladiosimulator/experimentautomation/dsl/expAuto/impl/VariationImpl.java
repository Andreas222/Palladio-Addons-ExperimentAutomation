/**
 * generated by Xtext 2.13.0
 */
package org.palladiosimulator.experimentautomation.dsl.expAuto.impl;

import de.uka.ipd.sdq.identifier.Identifier;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.palladiosimulator.experimentautomation.dsl.expAuto.ExpAutoPackage;
import org.palladiosimulator.experimentautomation.dsl.expAuto.Variation;

import org.palladiosimulator.experimentautomation.variation.ValueVariation;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Variation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.VariationImpl#getVariationTyp <em>Variation Typ</em>}</li>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.VariationImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.VariationImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.VariationImpl#getMaxVariations <em>Max Variations</em>}</li>
 *   <li>{@link org.palladiosimulator.experimentautomation.dsl.expAuto.impl.VariationImpl#getValueProvider <em>Value Provider</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VariationImpl extends MinimalEObjectImpl.Container implements Variation
{
  /**
   * The cached value of the '{@link #getVariationTyp() <em>Variation Typ</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariationTyp()
   * @generated
   * @ordered
   */
  protected ValueVariation variationTyp;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected Identifier target;

  /**
   * The default value of the '{@link #getMaxVariations() <em>Max Variations</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxVariations()
   * @generated
   * @ordered
   */
  protected static final int MAX_VARIATIONS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxVariations() <em>Max Variations</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxVariations()
   * @generated
   * @ordered
   */
  protected int maxVariations = MAX_VARIATIONS_EDEFAULT;

  /**
   * The cached value of the '{@link #getValueProvider() <em>Value Provider</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValueProvider()
   * @generated
   * @ordered
   */
  protected EObject valueProvider;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VariationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ExpAutoPackage.Literals.VARIATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValueVariation getVariationTyp()
  {
    if (variationTyp != null && variationTyp.eIsProxy())
    {
      InternalEObject oldVariationTyp = (InternalEObject)variationTyp;
      variationTyp = (ValueVariation)eResolveProxy(oldVariationTyp);
      if (variationTyp != oldVariationTyp)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ExpAutoPackage.VARIATION__VARIATION_TYP, oldVariationTyp, variationTyp));
      }
    }
    return variationTyp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValueVariation basicGetVariationTyp()
  {
    return variationTyp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariationTyp(ValueVariation newVariationTyp)
  {
    ValueVariation oldVariationTyp = variationTyp;
    variationTyp = newVariationTyp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.VARIATION__VARIATION_TYP, oldVariationTyp, variationTyp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.VARIATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Identifier getTarget()
  {
    if (target != null && ((EObject)target).eIsProxy())
    {
      InternalEObject oldTarget = (InternalEObject)target;
      target = (Identifier)eResolveProxy(oldTarget);
      if (target != oldTarget)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ExpAutoPackage.VARIATION__TARGET, oldTarget, target));
      }
    }
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Identifier basicGetTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTarget(Identifier newTarget)
  {
    Identifier oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.VARIATION__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMaxVariations()
  {
    return maxVariations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxVariations(int newMaxVariations)
  {
    int oldMaxVariations = maxVariations;
    maxVariations = newMaxVariations;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.VARIATION__MAX_VARIATIONS, oldMaxVariations, maxVariations));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getValueProvider()
  {
    return valueProvider;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValueProvider(EObject newValueProvider, NotificationChain msgs)
  {
    EObject oldValueProvider = valueProvider;
    valueProvider = newValueProvider;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ExpAutoPackage.VARIATION__VALUE_PROVIDER, oldValueProvider, newValueProvider);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValueProvider(EObject newValueProvider)
  {
    if (newValueProvider != valueProvider)
    {
      NotificationChain msgs = null;
      if (valueProvider != null)
        msgs = ((InternalEObject)valueProvider).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ExpAutoPackage.VARIATION__VALUE_PROVIDER, null, msgs);
      if (newValueProvider != null)
        msgs = ((InternalEObject)newValueProvider).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ExpAutoPackage.VARIATION__VALUE_PROVIDER, null, msgs);
      msgs = basicSetValueProvider(newValueProvider, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExpAutoPackage.VARIATION__VALUE_PROVIDER, newValueProvider, newValueProvider));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ExpAutoPackage.VARIATION__VALUE_PROVIDER:
        return basicSetValueProvider(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ExpAutoPackage.VARIATION__VARIATION_TYP:
        if (resolve) return getVariationTyp();
        return basicGetVariationTyp();
      case ExpAutoPackage.VARIATION__NAME:
        return getName();
      case ExpAutoPackage.VARIATION__TARGET:
        if (resolve) return getTarget();
        return basicGetTarget();
      case ExpAutoPackage.VARIATION__MAX_VARIATIONS:
        return getMaxVariations();
      case ExpAutoPackage.VARIATION__VALUE_PROVIDER:
        return getValueProvider();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ExpAutoPackage.VARIATION__VARIATION_TYP:
        setVariationTyp((ValueVariation)newValue);
        return;
      case ExpAutoPackage.VARIATION__NAME:
        setName((String)newValue);
        return;
      case ExpAutoPackage.VARIATION__TARGET:
        setTarget((Identifier)newValue);
        return;
      case ExpAutoPackage.VARIATION__MAX_VARIATIONS:
        setMaxVariations((Integer)newValue);
        return;
      case ExpAutoPackage.VARIATION__VALUE_PROVIDER:
        setValueProvider((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ExpAutoPackage.VARIATION__VARIATION_TYP:
        setVariationTyp((ValueVariation)null);
        return;
      case ExpAutoPackage.VARIATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ExpAutoPackage.VARIATION__TARGET:
        setTarget((Identifier)null);
        return;
      case ExpAutoPackage.VARIATION__MAX_VARIATIONS:
        setMaxVariations(MAX_VARIATIONS_EDEFAULT);
        return;
      case ExpAutoPackage.VARIATION__VALUE_PROVIDER:
        setValueProvider((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ExpAutoPackage.VARIATION__VARIATION_TYP:
        return variationTyp != null;
      case ExpAutoPackage.VARIATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ExpAutoPackage.VARIATION__TARGET:
        return target != null;
      case ExpAutoPackage.VARIATION__MAX_VARIATIONS:
        return maxVariations != MAX_VARIATIONS_EDEFAULT;
      case ExpAutoPackage.VARIATION__VALUE_PROVIDER:
        return valueProvider != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", maxVariations: ");
    result.append(maxVariations);
    result.append(')');
    return result.toString();
  }

} //VariationImpl

module org.palladiosimulator.experimentautomation.dsl.GenerateExpAuto

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.palladiosimulator.experimentautomation.dsl.generator.MyGeneratorModule

var rootPath = ".."

Workflow {
	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
	    platformUri = "${rootPath}"
	    scanClassPath = true

		uriMap = {
			from = "platform:/plugin/de.uka.ipd.sdq.identifier/model/identifier.genmodel"
			to = "platform:/resource/de.uka.ipd.sdq.identifier/model/identifier.genmodel"
		}
		
		/*uriMap = {
			from = "platform:/plugin/org.palladiosimulator.experimentautomation/model/experimentautomation.genmodel"
			to = "platform:/resource/org.palladiosimulator.experimentautomation/model/experimentautomation.genmodel"
		}*/

		registerGenModelFile = "platform:/resource/de.uka.ipd.sdq.identifier/model/identifier.genmodel"
		//registerGenModelFile = "platform:/resource/org.palladiosimulator.experimentautomation/model/experimentautomation.genmodel"
		
	}
	component = XtextGenerator {
		configuration = /*MyGeneratorModule*/ {
			project = StandardProjectConfig {
				baseName = "org.palladiosimulator.experimentautomation.dsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.palladiosimulator.experimentautomation.dsl.ExpAuto"
			fileExtensions = "ExpAuto"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}

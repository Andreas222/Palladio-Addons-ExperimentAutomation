/*
 * generated by Xtext 2.12.0
 */
grammar InternalExpAuto;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.palladiosimulator.experimentautomation.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.palladiosimulator.experimentautomation.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.palladiosimulator.experimentautomation.dsl.services.ExpAutoGrammarAccess;

}
@parser::members {
	private ExpAutoGrammarAccess grammarAccess;

	public void setGrammarAccess(ExpAutoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDatasource
entryRuleDatasource
:
{ before(grammarAccess.getDatasourceRule()); }
	 ruleDatasource
{ after(grammarAccess.getDatasourceRule()); } 
	 EOF 
;

// Rule Datasource
ruleDatasource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatasourceAccess().getGroup()); }
		(rule__Datasource__Group__0)
		{ after(grammarAccess.getDatasourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExperiment
entryRuleExperiment
:
{ before(grammarAccess.getExperimentRule()); }
	 ruleExperiment
{ after(grammarAccess.getExperimentRule()); } 
	 EOF 
;

// Rule Experiment
ruleExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExperimentAccess().getGroup()); }
		(rule__Experiment__Group__0)
		{ after(grammarAccess.getExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExperimentSpecifications
entryRuleExperimentSpecifications
:
{ before(grammarAccess.getExperimentSpecificationsRule()); }
	 ruleExperimentSpecifications
{ after(grammarAccess.getExperimentSpecificationsRule()); } 
	 EOF 
;

// Rule ExperimentSpecifications
ruleExperimentSpecifications 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsAssignment()); }
			(rule__ExperimentSpecifications__SpecificationsAssignment)
			{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsAssignment()); }
		)
		(
			{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsAssignment()); }
			(rule__ExperimentSpecifications__SpecificationsAssignment)*
			{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialModel
entryRuleInitialModel
:
{ before(grammarAccess.getInitialModelRule()); }
	 ruleInitialModel
{ after(grammarAccess.getInitialModelRule()); } 
	 EOF 
;

// Rule InitialModel
ruleInitialModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialModelAccess().getGroup()); }
		(rule__InitialModel__Group__0)
		{ after(grammarAccess.getInitialModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitSpecifications
entryRuleInitSpecifications
:
{ before(grammarAccess.getInitSpecificationsRule()); }
	 ruleInitSpecifications
{ after(grammarAccess.getInitSpecificationsRule()); } 
	 EOF 
;

// Rule InitSpecifications
ruleInitSpecifications 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsAssignment()); }
			(rule__InitSpecifications__SpecificationsAssignment)
			{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsAssignment()); }
		)
		(
			{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsAssignment()); }
			(rule__InitSpecifications__SpecificationsAssignment)*
			{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllocationModel
entryRuleAllocationModel
:
{ before(grammarAccess.getAllocationModelRule()); }
	 ruleAllocationModel
{ after(grammarAccess.getAllocationModelRule()); } 
	 EOF 
;

// Rule AllocationModel
ruleAllocationModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllocationModelAccess().getGroup()); }
		(rule__AllocationModel__Group__0)
		{ after(grammarAccess.getAllocationModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsageModel
entryRuleUsageModel
:
{ before(grammarAccess.getUsageModelRule()); }
	 ruleUsageModel
{ after(grammarAccess.getUsageModelRule()); } 
	 EOF 
;

// Rule UsageModel
ruleUsageModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsageModelAccess().getGroup()); }
		(rule__UsageModel__Group__0)
		{ after(grammarAccess.getUsageModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMiddlewareRepository
entryRuleMiddlewareRepository
:
{ before(grammarAccess.getMiddlewareRepositoryRule()); }
	 ruleMiddlewareRepository
{ after(grammarAccess.getMiddlewareRepositoryRule()); } 
	 EOF 
;

// Rule MiddlewareRepository
ruleMiddlewareRepository 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMiddlewareRepositoryAccess().getGroup()); }
		(rule__MiddlewareRepository__Group__0)
		{ after(grammarAccess.getMiddlewareRepositoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventMiddlewareRepository
entryRuleEventMiddlewareRepository
:
{ before(grammarAccess.getEventMiddlewareRepositoryRule()); }
	 ruleEventMiddlewareRepository
{ after(grammarAccess.getEventMiddlewareRepositoryRule()); } 
	 EOF 
;

// Rule EventMiddlewareRepository
ruleEventMiddlewareRepository 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventMiddlewareRepositoryAccess().getGroup()); }
		(rule__EventMiddlewareRepository__Group__0)
		{ after(grammarAccess.getEventMiddlewareRepositoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonitorRepository
entryRuleMonitorRepository
:
{ before(grammarAccess.getMonitorRepositoryRule()); }
	 ruleMonitorRepository
{ after(grammarAccess.getMonitorRepositoryRule()); } 
	 EOF 
;

// Rule MonitorRepository
ruleMonitorRepository 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonitorRepositoryAccess().getGroup()); }
		(rule__MonitorRepository__Group__0)
		{ after(grammarAccess.getMonitorRepositoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariation
entryRuleVariation
:
{ before(grammarAccess.getVariationRule()); }
	 ruleVariation
{ after(grammarAccess.getVariationRule()); } 
	 EOF 
;

// Rule Variation
ruleVariation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariationAccess().getGroup()); }
		(rule__Variation__Group__0)
		{ after(grammarAccess.getVariationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedIntervalsValueProvider
entryRuleNestedIntervalsValueProvider
:
{ before(grammarAccess.getNestedIntervalsValueProviderRule()); }
	 ruleNestedIntervalsValueProvider
{ after(grammarAccess.getNestedIntervalsValueProviderRule()); } 
	 EOF 
;

// Rule NestedIntervalsValueProvider
ruleNestedIntervalsValueProvider 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getAlternatives()); }
		(rule__NestedIntervalsValueProvider__Alternatives)
		{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetValueProvider
entryRuleSetValueProvider
:
{ before(grammarAccess.getSetValueProviderRule()); }
	 ruleSetValueProvider
{ after(grammarAccess.getSetValueProviderRule()); } 
	 EOF 
;

// Rule SetValueProvider
ruleSetValueProvider 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetValueProviderAccess().getAlternatives()); }
		(rule__SetValueProvider__Alternatives)
		{ after(grammarAccess.getSetValueProviderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinearValueProvider
entryRuleLinearValueProvider
:
{ before(grammarAccess.getLinearValueProviderRule()); }
	 ruleLinearValueProvider
{ after(grammarAccess.getLinearValueProviderRule()); } 
	 EOF 
;

// Rule LinearValueProvider
ruleLinearValueProvider 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinearValueProviderAccess().getGroup()); }
		(rule__LinearValueProvider__Group__0)
		{ after(grammarAccess.getLinearValueProviderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentialValueProvider
entryRuleExponentialValueProvider
:
{ before(grammarAccess.getExponentialValueProviderRule()); }
	 ruleExponentialValueProvider
{ after(grammarAccess.getExponentialValueProviderRule()); } 
	 EOF 
;

// Rule ExponentialValueProvider
ruleExponentialValueProvider 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentialValueProviderAccess().getGroup()); }
		(rule__ExponentialValueProvider__Group__0)
		{ after(grammarAccess.getExponentialValueProviderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolynomialValueProvider
entryRulePolynomialValueProvider
:
{ before(grammarAccess.getPolynomialValueProviderRule()); }
	 rulePolynomialValueProvider
{ after(grammarAccess.getPolynomialValueProviderRule()); } 
	 EOF 
;

// Rule PolynomialValueProvider
rulePolynomialValueProvider 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolynomialValueProviderAccess().getGroup()); }
		(rule__PolynomialValueProvider__Group__0)
		{ after(grammarAccess.getPolynomialValueProviderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStopTimeCondition
entryRuleStopTimeCondition
:
{ before(grammarAccess.getStopTimeConditionRule()); }
	 ruleStopTimeCondition
{ after(grammarAccess.getStopTimeConditionRule()); } 
	 EOF 
;

// Rule StopTimeCondition
ruleStopTimeCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopTimeConditionAccess().getGroup()); }
		(rule__StopTimeCondition__Group__0)
		{ after(grammarAccess.getStopTimeConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStopCountCondition
entryRuleStopCountCondition
:
{ before(grammarAccess.getStopCountConditionRule()); }
	 ruleStopCountCondition
{ after(grammarAccess.getStopCountConditionRule()); } 
	 EOF 
;

// Rule StopCountCondition
ruleStopCountCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopCountConditionAccess().getGroup()); }
		(rule__StopCountCondition__Group__0)
		{ after(grammarAccess.getStopCountConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberOfExperiments
entryRuleNumberOfExperiments
:
{ before(grammarAccess.getNumberOfExperimentsRule()); }
	 ruleNumberOfExperiments
{ after(grammarAccess.getNumberOfExperimentsRule()); } 
	 EOF 
;

// Rule NumberOfExperiments
ruleNumberOfExperiments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberOfExperimentsAccess().getGroup()); }
		(rule__NumberOfExperiments__Group__0)
		{ after(grammarAccess.getNumberOfExperimentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSeedDefinition
entryRuleSeedDefinition
:
{ before(grammarAccess.getSeedDefinitionRule()); }
	 ruleSeedDefinition
{ after(grammarAccess.getSeedDefinitionRule()); } 
	 EOF 
;

// Rule SeedDefinition
ruleSeedDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSeedDefinitionAccess().getGroup()); }
		(rule__SeedDefinition__Group__0)
		{ after(grammarAccess.getSeedDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfSeeds
entryRuleListOfSeeds
:
{ before(grammarAccess.getListOfSeedsRule()); }
	 ruleListOfSeeds
{ after(grammarAccess.getListOfSeedsRule()); } 
	 EOF 
;

// Rule ListOfSeeds
ruleListOfSeeds 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfSeedsAccess().getGroup()); }
		(rule__ListOfSeeds__Group__0)
		{ after(grammarAccess.getListOfSeedsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExperimentDatasource
entryRuleExperimentDatasource
:
{ before(grammarAccess.getExperimentDatasourceRule()); }
	 ruleExperimentDatasource
{ after(grammarAccess.getExperimentDatasourceRule()); } 
	 EOF 
;

// Rule ExperimentDatasource
ruleExperimentDatasource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExperimentDatasourceAccess().getGroup()); }
		(rule__ExperimentDatasource__Group__0)
		{ after(grammarAccess.getExperimentDatasourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleToolDefinition
entryRuleToolDefinition
:
{ before(grammarAccess.getToolDefinitionRule()); }
	 ruleToolDefinition
{ after(grammarAccess.getToolDefinitionRule()); } 
	 EOF 
;

// Rule ToolDefinition
ruleToolDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToolDefinitionAccess().getGroup()); }
		(rule__ToolDefinition__Group__0)
		{ after(grammarAccess.getToolDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigurationParams
entryRuleConfigurationParams
:
{ before(grammarAccess.getConfigurationParamsRule()); }
	 ruleConfigurationParams
{ after(grammarAccess.getConfigurationParamsRule()); } 
	 EOF 
;

// Rule ConfigurationParams
ruleConfigurationParams 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigurationParamsAccess().getGroup()); }
		(rule__ConfigurationParams__Group__0)
		{ after(grammarAccess.getConfigurationParamsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigValue
entryRuleConfigValue
:
{ before(grammarAccess.getConfigValueRule()); }
	 ruleConfigValue
{ after(grammarAccess.getConfigValueRule()); } 
	 EOF 
;

// Rule ConfigValue
ruleConfigValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigValueAccess().getAlternatives()); }
		(rule__ConfigValue__Alternatives)
		{ after(grammarAccess.getConfigValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__DesignAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentAccess().getDesignFullFactorialKeyword_3_0_0()); }
		'FullFactorial'
		{ after(grammarAccess.getExperimentAccess().getDesignFullFactorialKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentAccess().getDesignOneFactorKeyword_3_0_1()); }
		'OneFactor'
		{ after(grammarAccess.getExperimentAccess().getDesignOneFactorKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentSpecifications__SpecificationsAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsDescriptionParserRuleCall_0_0()); }
		ruleDescription
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsDescriptionParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsInitialModelParserRuleCall_0_1()); }
		ruleInitialModel
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsInitialModelParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsVariationParserRuleCall_0_2()); }
		ruleVariation
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsVariationParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsStopTimeConditionParserRuleCall_0_3()); }
		ruleStopTimeCondition
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsStopTimeConditionParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsStopCountConditionParserRuleCall_0_4()); }
		ruleStopCountCondition
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsStopCountConditionParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsNumberOfExperimentsParserRuleCall_0_5()); }
		ruleNumberOfExperiments
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsNumberOfExperimentsParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsSeedDefinitionParserRuleCall_0_6()); }
		ruleSeedDefinition
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsSeedDefinitionParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsExperimentDatasourceParserRuleCall_0_7()); }
		ruleExperimentDatasource
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsExperimentDatasourceParserRuleCall_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsToolDefinitionParserRuleCall_0_8()); }
		ruleToolDefinition
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsToolDefinitionParserRuleCall_0_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitSpecifications__SpecificationsAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsAllocationModelParserRuleCall_0_0()); }
		ruleAllocationModel
		{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsAllocationModelParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsUsageModelParserRuleCall_0_1()); }
		ruleUsageModel
		{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsUsageModelParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsMiddlewareRepositoryParserRuleCall_0_2()); }
		ruleMiddlewareRepository
		{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsMiddlewareRepositoryParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsEventMiddlewareRepositoryParserRuleCall_0_3()); }
		ruleEventMiddlewareRepository
		{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsEventMiddlewareRepositoryParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsMonitorRepositoryParserRuleCall_0_4()); }
		ruleMonitorRepository
		{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsMonitorRepositoryParserRuleCall_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__ValueProviderAlternatives_13_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationAccess().getValueProviderNestedIntervalsValueProviderParserRuleCall_13_0_0()); }
		ruleNestedIntervalsValueProvider
		{ after(grammarAccess.getVariationAccess().getValueProviderNestedIntervalsValueProviderParserRuleCall_13_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariationAccess().getValueProviderSetValueProviderParserRuleCall_13_0_1()); }
		ruleSetValueProvider
		{ after(grammarAccess.getVariationAccess().getValueProviderSetValueProviderParserRuleCall_13_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariationAccess().getValueProviderLinearValueProviderParserRuleCall_13_0_2()); }
		ruleLinearValueProvider
		{ after(grammarAccess.getVariationAccess().getValueProviderLinearValueProviderParserRuleCall_13_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariationAccess().getValueProviderExponentialValueProviderParserRuleCall_13_0_3()); }
		ruleExponentialValueProvider
		{ after(grammarAccess.getVariationAccess().getValueProviderExponentialValueProviderParserRuleCall_13_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getVariationAccess().getValueProviderPolynomialValueProviderParserRuleCall_13_0_4()); }
		rulePolynomialValueProvider
		{ after(grammarAccess.getVariationAccess().getValueProviderPolynomialValueProviderParserRuleCall_13_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getGroup_0()); }
		(rule__NestedIntervalsValueProvider__Group_0__0)
		{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getGroup_1()); }
		(rule__NestedIntervalsValueProvider__Group_1__0)
		{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetValueProviderAccess().getGroup_0()); }
		(rule__SetValueProvider__Group_0__0)
		{ after(grammarAccess.getSetValueProviderAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetValueProviderAccess().getGroup_1()); }
		(rule__SetValueProvider__Group_1__0)
		{ after(grammarAccess.getSetValueProviderAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigValueAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getConfigValueAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConfigValueAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getConfigValueAccess().getINTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
		(rule__Model__ImportsAssignment_0)
		{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
		(rule__Model__ImportsAssignment_0)*
		{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getDatasourcesAssignment_1()); }
		(rule__Model__DatasourcesAssignment_1)
		{ after(grammarAccess.getModelAccess().getDatasourcesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getDatasourcesAssignment_1()); }
		(rule__Model__DatasourcesAssignment_1)*
		{ after(grammarAccess.getModelAccess().getDatasourcesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getExperimentsAssignment_2()); }
		(rule__Model__ExperimentsAssignment_2)
		{ after(grammarAccess.getModelAccess().getExperimentsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getExperimentsAssignment_2()); }
		(rule__Model__ExperimentsAssignment_2)*
		{ after(grammarAccess.getModelAccess().getExperimentsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getPathAssignment_1()); }
	(rule__Import__PathAssignment_1)
	{ after(grammarAccess.getImportAccess().getPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Datasource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Datasource__Group__0__Impl
	rule__Datasource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasourceAccess().getDatasourceKeyword_0()); }
	'datasource'
	{ after(grammarAccess.getDatasourceAccess().getDatasourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Datasource__Group__1__Impl
	rule__Datasource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasourceAccess().getNameAssignment_1()); }
	(rule__Datasource__NameAssignment_1)
	{ after(grammarAccess.getDatasourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Datasource__Group__2__Impl
	rule__Datasource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasourceAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getDatasourceAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Datasource__Group__3__Impl
	rule__Datasource__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasourceAccess().getSourceTypeAssignment_3()); }
	(rule__Datasource__SourceTypeAssignment_3)
	{ after(grammarAccess.getDatasourceAccess().getSourceTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Datasource__Group__4__Impl
	rule__Datasource__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasourceAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getDatasourceAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Datasource__Group__5__Impl
	rule__Datasource__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasourceAccess().getSourceURIAssignment_5()); }
	(rule__Datasource__SourceURIAssignment_5)
	{ after(grammarAccess.getDatasourceAccess().getSourceURIAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Datasource__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasourceAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getDatasourceAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__0__Impl
	rule__Experiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getExperimentKeyword_0()); }
	'experiment'
	{ after(grammarAccess.getExperimentAccess().getExperimentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__1__Impl
	rule__Experiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getNameAssignment_1()); }
	(rule__Experiment__NameAssignment_1)
	{ after(grammarAccess.getExperimentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__2__Impl
	rule__Experiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getExperimentAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__3__Impl
	rule__Experiment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getDesignAssignment_3()); }
	(rule__Experiment__DesignAssignment_3)
	{ after(grammarAccess.getExperimentAccess().getDesignAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__4__Impl
	rule__Experiment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getExperimentAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__5__Impl
	rule__Experiment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getExperimentSpecificationsAssignment_5()); }
	(rule__Experiment__ExperimentSpecificationsAssignment_5)
	{ after(grammarAccess.getExperimentAccess().getExperimentSpecificationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getExperimentAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
	'description'
	{ after(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
	rule__Description__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDescriptionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionAssignment_2()); }
	(rule__Description__DescriptionAssignment_2)
	{ after(grammarAccess.getDescriptionAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialModel__Group__0__Impl
	rule__InitialModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialModelAccess().getInitialKeyword_0()); }
	'initial'
	{ after(grammarAccess.getInitialModelAccess().getInitialKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialModel__Group__1__Impl
	rule__InitialModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialModelAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getInitialModelAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialModel__Group__2__Impl
	rule__InitialModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialModelAccess().getModeltypAssignment_2()); }
	(rule__InitialModel__ModeltypAssignment_2)
	{ after(grammarAccess.getInitialModelAccess().getModeltypAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialModel__Group__3__Impl
	rule__InitialModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialModelAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getInitialModelAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialModel__Group__4__Impl
	rule__InitialModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialModelAccess().getInitSpecificationsAssignment_4()); }
	(rule__InitialModel__InitSpecificationsAssignment_4)
	{ after(grammarAccess.getInitialModelAccess().getInitSpecificationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialModelAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getInitialModelAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllocationModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllocationModel__Group__0__Impl
	rule__AllocationModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllocationModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllocationModelAccess().getAllocationKeyword_0()); }
	'allocation'
	{ after(grammarAccess.getAllocationModelAccess().getAllocationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllocationModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllocationModel__Group__1__Impl
	rule__AllocationModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllocationModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllocationModelAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAllocationModelAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllocationModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllocationModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllocationModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllocationModelAccess().getAllocationAssignment_2()); }
	(rule__AllocationModel__AllocationAssignment_2)
	{ after(grammarAccess.getAllocationModelAccess().getAllocationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsageModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageModel__Group__0__Impl
	rule__UsageModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageModelAccess().getUsageModelKeyword_0()); }
	'usageModel'
	{ after(grammarAccess.getUsageModelAccess().getUsageModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageModel__Group__1__Impl
	rule__UsageModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageModelAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getUsageModelAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageModelAccess().getUsageModelAssignment_2()); }
	(rule__UsageModel__UsageModelAssignment_2)
	{ after(grammarAccess.getUsageModelAccess().getUsageModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MiddlewareRepository__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiddlewareRepository__Group__0__Impl
	rule__MiddlewareRepository__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddlewareRepository__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiddlewareRepositoryAccess().getMiddlewareRepositoryKeyword_0()); }
	'middlewareRepository'
	{ after(grammarAccess.getMiddlewareRepositoryAccess().getMiddlewareRepositoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddlewareRepository__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiddlewareRepository__Group__1__Impl
	rule__MiddlewareRepository__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddlewareRepository__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiddlewareRepositoryAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getMiddlewareRepositoryAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddlewareRepository__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiddlewareRepository__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddlewareRepository__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiddlewareRepositoryAccess().getMiddlewareRepositoryAssignment_2()); }
	(rule__MiddlewareRepository__MiddlewareRepositoryAssignment_2)
	{ after(grammarAccess.getMiddlewareRepositoryAccess().getMiddlewareRepositoryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventMiddlewareRepository__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventMiddlewareRepository__Group__0__Impl
	rule__EventMiddlewareRepository__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventMiddlewareRepository__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventMiddlewareRepositoryAccess().getEventMiddlewareRepositoryKeyword_0()); }
	'eventMiddlewareRepository'
	{ after(grammarAccess.getEventMiddlewareRepositoryAccess().getEventMiddlewareRepositoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventMiddlewareRepository__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventMiddlewareRepository__Group__1__Impl
	rule__EventMiddlewareRepository__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventMiddlewareRepository__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventMiddlewareRepositoryAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEventMiddlewareRepositoryAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventMiddlewareRepository__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventMiddlewareRepository__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventMiddlewareRepository__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventMiddlewareRepositoryAccess().getEventMiddelwareRepositoryAssignment_2()); }
	(rule__EventMiddlewareRepository__EventMiddelwareRepositoryAssignment_2)
	{ after(grammarAccess.getEventMiddlewareRepositoryAccess().getEventMiddelwareRepositoryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonitorRepository__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitorRepository__Group__0__Impl
	rule__MonitorRepository__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitorRepository__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorRepositoryAccess().getMonitorRepositoryKeyword_0()); }
	'monitorRepository'
	{ after(grammarAccess.getMonitorRepositoryAccess().getMonitorRepositoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitorRepository__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitorRepository__Group__1__Impl
	rule__MonitorRepository__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitorRepository__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorRepositoryAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getMonitorRepositoryAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitorRepository__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitorRepository__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitorRepository__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorRepositoryAccess().getMonitorRepositoryAssignment_2()); }
	(rule__MonitorRepository__MonitorRepositoryAssignment_2)
	{ after(grammarAccess.getMonitorRepositoryAccess().getMonitorRepositoryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__0__Impl
	rule__Variation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getVariationKeyword_0()); }
	'variation'
	{ after(grammarAccess.getVariationAccess().getVariationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__1__Impl
	rule__Variation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getVariationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__2__Impl
	rule__Variation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getVariationTypAssignment_2()); }
	(rule__Variation__VariationTypAssignment_2)
	{ after(grammarAccess.getVariationAccess().getVariationTypAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__3__Impl
	rule__Variation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getNameAssignment_3()); }
	(rule__Variation__NameAssignment_3)
	{ after(grammarAccess.getVariationAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__4__Impl
	rule__Variation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getVariationAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__5__Impl
	rule__Variation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getTargetKeyword_5()); }
	'target'
	{ after(grammarAccess.getVariationAccess().getTargetKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__6__Impl
	rule__Variation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getVariationAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__7__Impl
	rule__Variation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getTargetAssignment_7()); }
	(rule__Variation__TargetAssignment_7)
	{ after(grammarAccess.getVariationAccess().getTargetAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__8__Impl
	rule__Variation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getMaxVariationsKeyword_8()); }
	'maxVariations'
	{ after(grammarAccess.getVariationAccess().getMaxVariationsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__9__Impl
	rule__Variation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getEqualsSignKeyword_9()); }
	'='
	{ after(grammarAccess.getVariationAccess().getEqualsSignKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__10__Impl
	rule__Variation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getMaxVariationsAssignment_10()); }
	(rule__Variation__MaxVariationsAssignment_10)
	{ after(grammarAccess.getVariationAccess().getMaxVariationsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__11__Impl
	rule__Variation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getValuesKeyword_11()); }
	'values'
	{ after(grammarAccess.getVariationAccess().getValuesKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__12__Impl
	rule__Variation__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getEqualsSignKeyword_12()); }
	'='
	{ after(grammarAccess.getVariationAccess().getEqualsSignKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__13__Impl
	rule__Variation__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getValueProviderAssignment_13()); }
	(rule__Variation__ValueProviderAssignment_13)
	{ after(grammarAccess.getVariationAccess().getValueProviderAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variation__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getVariationAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedIntervalsValueProvider__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_0__0__Impl
	rule__NestedIntervalsValueProvider__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_0__1__Impl
	rule__NestedIntervalsValueProvider__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMinAssignment_0_1()); }
	(rule__NestedIntervalsValueProvider__MinAssignment_0_1)
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMinAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_0__2__Impl
	rule__NestedIntervalsValueProvider__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getCommaKeyword_0_2()); }
	','
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getCommaKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_0__3__Impl
	rule__NestedIntervalsValueProvider__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxAssignment_0_3()); }
	(rule__NestedIntervalsValueProvider__MaxAssignment_0_3)
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getRightSquareBracketKeyword_0_4()); }
	']'
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getRightSquareBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedIntervalsValueProvider__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_1__0__Impl
	rule__NestedIntervalsValueProvider__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getNestedIntervallKeyword_1_0()); }
	'nestedIntervall'
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getNestedIntervallKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_1__1__Impl
	rule__NestedIntervalsValueProvider__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_1__2__Impl
	rule__NestedIntervalsValueProvider__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMinAssignment_1_2()); }
	(rule__NestedIntervalsValueProvider__MinAssignment_1_2)
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMinAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_1__3__Impl
	rule__NestedIntervalsValueProvider__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getCommaKeyword_1_3()); }
	','
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getCommaKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_1__4__Impl
	rule__NestedIntervalsValueProvider__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxAssignment_1_4()); }
	(rule__NestedIntervalsValueProvider__MaxAssignment_1_4)
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedIntervalsValueProvider__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetValueProvider__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_0__0__Impl
	rule__SetValueProvider__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getLeftCurlyBracketKeyword_0_0()); }
	'{'
	{ after(grammarAccess.getSetValueProviderAccess().getLeftCurlyBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_0__1__Impl
	rule__SetValueProvider__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getValuesAssignment_0_1()); }
	(rule__SetValueProvider__ValuesAssignment_0_1)
	{ after(grammarAccess.getSetValueProviderAccess().getValuesAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_0__2__Impl
	rule__SetValueProvider__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getGroup_0_2()); }
	(rule__SetValueProvider__Group_0_2__0)*
	{ after(grammarAccess.getSetValueProviderAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getRightCurlyBracketKeyword_0_3()); }
	'}'
	{ after(grammarAccess.getSetValueProviderAccess().getRightCurlyBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetValueProvider__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_0_2__0__Impl
	rule__SetValueProvider__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getCommaKeyword_0_2_0()); }
	','
	{ after(grammarAccess.getSetValueProviderAccess().getCommaKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getValuesAssignment_0_2_1()); }
	(rule__SetValueProvider__ValuesAssignment_0_2_1)
	{ after(grammarAccess.getSetValueProviderAccess().getValuesAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetValueProvider__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_1__0__Impl
	rule__SetValueProvider__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getSetValuesKeyword_1_0()); }
	'setValues'
	{ after(grammarAccess.getSetValueProviderAccess().getSetValuesKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_1__1__Impl
	rule__SetValueProvider__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSetValueProviderAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_1__2__Impl
	rule__SetValueProvider__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getValuesAssignment_1_2()); }
	(rule__SetValueProvider__ValuesAssignment_1_2)
	{ after(grammarAccess.getSetValueProviderAccess().getValuesAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_1__3__Impl
	rule__SetValueProvider__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getGroup_1_3()); }
	(rule__SetValueProvider__Group_1_3__0)*
	{ after(grammarAccess.getSetValueProviderAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getSetValueProviderAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetValueProvider__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_1_3__0__Impl
	rule__SetValueProvider__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getCommaKeyword_1_3_0()); }
	','
	{ after(grammarAccess.getSetValueProviderAccess().getCommaKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetValueProvider__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetValueProviderAccess().getValuesAssignment_1_3_1()); }
	(rule__SetValueProvider__ValuesAssignment_1_3_1)
	{ after(grammarAccess.getSetValueProviderAccess().getValuesAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinearValueProvider__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearValueProvider__Group__0__Impl
	rule__LinearValueProvider__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearValueProviderAccess().getLinearKeyword_0()); }
	'linear'
	{ after(grammarAccess.getLinearValueProviderAccess().getLinearKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearValueProvider__Group__1__Impl
	rule__LinearValueProvider__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearValueProviderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLinearValueProviderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearValueProvider__Group__2__Impl
	rule__LinearValueProvider__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearValueProviderAccess().getSummandAssignment_2()); }
	(rule__LinearValueProvider__SummandAssignment_2)
	{ after(grammarAccess.getLinearValueProviderAccess().getSummandAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearValueProvider__Group__3__Impl
	rule__LinearValueProvider__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearValueProviderAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getLinearValueProviderAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearValueProvider__Group__4__Impl
	rule__LinearValueProvider__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearValueProviderAccess().getFactorAssignment_4()); }
	(rule__LinearValueProvider__FactorAssignment_4)
	{ after(grammarAccess.getLinearValueProviderAccess().getFactorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearValueProvider__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearValueProviderAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getLinearValueProviderAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentialValueProvider__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentialValueProvider__Group__0__Impl
	rule__ExponentialValueProvider__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentialValueProviderAccess().getExponentialKeyword_0()); }
	'exponential'
	{ after(grammarAccess.getExponentialValueProviderAccess().getExponentialKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentialValueProvider__Group__1__Impl
	rule__ExponentialValueProvider__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentialValueProviderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getExponentialValueProviderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentialValueProvider__Group__2__Impl
	rule__ExponentialValueProvider__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentialValueProviderAccess().getBaseAssignment_2()); }
	(rule__ExponentialValueProvider__BaseAssignment_2)
	{ after(grammarAccess.getExponentialValueProviderAccess().getBaseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentialValueProvider__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentialValueProviderAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getExponentialValueProviderAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PolynomialValueProvider__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolynomialValueProvider__Group__0__Impl
	rule__PolynomialValueProvider__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolynomialValueProviderAccess().getPolynomialKeyword_0()); }
	'polynomial'
	{ after(grammarAccess.getPolynomialValueProviderAccess().getPolynomialKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolynomialValueProvider__Group__1__Impl
	rule__PolynomialValueProvider__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolynomialValueProviderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPolynomialValueProviderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolynomialValueProvider__Group__2__Impl
	rule__PolynomialValueProvider__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolynomialValueProviderAccess().getExponentAssignment_2()); }
	(rule__PolynomialValueProvider__ExponentAssignment_2)
	{ after(grammarAccess.getPolynomialValueProviderAccess().getExponentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolynomialValueProvider__Group__3__Impl
	rule__PolynomialValueProvider__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolynomialValueProviderAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getPolynomialValueProviderAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolynomialValueProvider__Group__4__Impl
	rule__PolynomialValueProvider__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolynomialValueProviderAccess().getFactorAssignment_4()); }
	(rule__PolynomialValueProvider__FactorAssignment_4)
	{ after(grammarAccess.getPolynomialValueProviderAccess().getFactorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolynomialValueProvider__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolynomialValueProviderAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getPolynomialValueProviderAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopTimeCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimeCondition__Group__0__Impl
	rule__StopTimeCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimeConditionAccess().getStopKeyword_0()); }
	'stop'
	{ after(grammarAccess.getStopTimeConditionAccess().getStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimeCondition__Group__1__Impl
	rule__StopTimeCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimeConditionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getStopTimeConditionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimeCondition__Group__2__Impl
	rule__StopTimeCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimeConditionAccess().getStopTypAssignment_2()); }
	(rule__StopTimeCondition__StopTypAssignment_2)
	{ after(grammarAccess.getStopTimeConditionAccess().getStopTypAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimeCondition__Group__3__Impl
	rule__StopTimeCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimeConditionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getStopTimeConditionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimeCondition__Group__4__Impl
	rule__StopTimeCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimeConditionAccess().getStopParamAssignment_4()); }
	(rule__StopTimeCondition__StopParamAssignment_4)
	{ after(grammarAccess.getStopTimeConditionAccess().getStopParamAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopTimeCondition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopTimeConditionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getStopTimeConditionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopCountCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopCountCondition__Group__0__Impl
	rule__StopCountCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopCountConditionAccess().getStopKeyword_0()); }
	'stop'
	{ after(grammarAccess.getStopCountConditionAccess().getStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopCountCondition__Group__1__Impl
	rule__StopCountCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopCountConditionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getStopCountConditionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopCountCondition__Group__2__Impl
	rule__StopCountCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopCountConditionAccess().getStopTypAssignment_2()); }
	(rule__StopCountCondition__StopTypAssignment_2)
	{ after(grammarAccess.getStopCountConditionAccess().getStopTypAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopCountCondition__Group__3__Impl
	rule__StopCountCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopCountConditionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getStopCountConditionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopCountCondition__Group__4__Impl
	rule__StopCountCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopCountConditionAccess().getStopParamAssignment_4()); }
	(rule__StopCountCondition__StopParamAssignment_4)
	{ after(grammarAccess.getStopCountConditionAccess().getStopParamAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopCountCondition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopCountConditionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getStopCountConditionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberOfExperiments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOfExperiments__Group__0__Impl
	rule__NumberOfExperiments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOfExperiments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOfExperimentsAccess().getRepetitionsKeyword_0()); }
	'repetitions'
	{ after(grammarAccess.getNumberOfExperimentsAccess().getRepetitionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOfExperiments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOfExperiments__Group__1__Impl
	rule__NumberOfExperiments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOfExperiments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOfExperimentsAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getNumberOfExperimentsAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOfExperiments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOfExperiments__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOfExperiments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOfExperimentsAccess().getNumberOfRepetitionsAssignment_2()); }
	(rule__NumberOfExperiments__NumberOfRepetitionsAssignment_2)
	{ after(grammarAccess.getNumberOfExperimentsAccess().getNumberOfRepetitionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SeedDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group__0__Impl
	rule__SeedDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getSeedsKeyword_0()); }
	'seeds'
	{ after(grammarAccess.getSeedDefinitionAccess().getSeedsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group__1__Impl
	rule__SeedDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSeedDefinitionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group__2__Impl
	rule__SeedDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSeedDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group__3__Impl
	rule__SeedDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getSeedListsAssignment_3()); }
	(rule__SeedDefinition__SeedListsAssignment_3)
	{ after(grammarAccess.getSeedDefinitionAccess().getSeedListsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group__4__Impl
	rule__SeedDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getGroup_4()); }
	(rule__SeedDefinition__Group_4__0)*
	{ after(grammarAccess.getSeedDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getSeedDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SeedDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group_4__0__Impl
	rule__SeedDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSeedDefinitionAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeedDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeedDefinitionAccess().getSeedListsAssignment_4_1()); }
	(rule__SeedDefinition__SeedListsAssignment_4_1)
	{ after(grammarAccess.getSeedDefinitionAccess().getSeedListsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfSeeds__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfSeeds__Group__0__Impl
	rule__ListOfSeeds__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfSeedsAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getListOfSeedsAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfSeeds__Group__1__Impl
	rule__ListOfSeeds__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfSeedsAccess().getSeedsAssignment_1()); }
	(rule__ListOfSeeds__SeedsAssignment_1)
	{ after(grammarAccess.getListOfSeedsAccess().getSeedsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfSeeds__Group__2__Impl
	rule__ListOfSeeds__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfSeedsAccess().getGroup_2()); }
	(rule__ListOfSeeds__Group_2__0)*
	{ after(grammarAccess.getListOfSeedsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfSeeds__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfSeedsAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getListOfSeedsAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfSeeds__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfSeeds__Group_2__0__Impl
	rule__ListOfSeeds__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfSeedsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getListOfSeedsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfSeeds__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfSeedsAccess().getSeedsAssignment_2_1()); }
	(rule__ListOfSeeds__SeedsAssignment_2_1)
	{ after(grammarAccess.getListOfSeedsAccess().getSeedsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExperimentDatasource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentDatasource__Group__0__Impl
	rule__ExperimentDatasource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentDatasource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentDatasourceAccess().getDatasourceKeyword_0()); }
	'datasource'
	{ after(grammarAccess.getExperimentDatasourceAccess().getDatasourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentDatasource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentDatasource__Group__1__Impl
	rule__ExperimentDatasource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentDatasource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentDatasourceAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getExperimentDatasourceAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentDatasource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExperimentDatasource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentDatasource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentDatasourceAccess().getSourceAssignment_2()); }
	(rule__ExperimentDatasource__SourceAssignment_2)
	{ after(grammarAccess.getExperimentDatasourceAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ToolDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolDefinition__Group__0__Impl
	rule__ToolDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolDefinitionAccess().getToolKeyword_0()); }
	'tool'
	{ after(grammarAccess.getToolDefinitionAccess().getToolKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolDefinition__Group__1__Impl
	rule__ToolDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolDefinitionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getToolDefinitionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolDefinition__Group__2__Impl
	rule__ToolDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolDefinitionAccess().getToolAssignment_2()); }
	(rule__ToolDefinition__ToolAssignment_2)
	{ after(grammarAccess.getToolDefinitionAccess().getToolAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolDefinition__Group__3__Impl
	rule__ToolDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getToolDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolDefinition__Group__4__Impl
	rule__ToolDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolDefinitionAccess().getConfigParamsAssignment_4()); }
	(rule__ToolDefinition__ConfigParamsAssignment_4)*
	{ after(grammarAccess.getToolDefinitionAccess().getConfigParamsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToolDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToolDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getToolDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationParams__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigurationParams__Group__0__Impl
	rule__ConfigurationParams__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationParamsAccess().getKeyAssignment_0()); }
	(rule__ConfigurationParams__KeyAssignment_0)
	{ after(grammarAccess.getConfigurationParamsAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigurationParams__Group__1__Impl
	rule__ConfigurationParams__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationParamsAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getConfigurationParamsAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigurationParams__Group__2__Impl
	rule__ConfigurationParams__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationParamsAccess().getValueAssignment_2()); }
	(rule__ConfigurationParams__ValueAssignment_2)
	{ after(grammarAccess.getConfigurationParamsAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigurationParams__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationParamsAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getConfigurationParamsAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DatasourcesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDatasourcesDatasourceParserRuleCall_1_0()); }
		ruleDatasource
		{ after(grammarAccess.getModelAccess().getDatasourcesDatasourceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExperimentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getExperimentsExperimentParserRuleCall_2_0()); }
		ruleExperiment
		{ after(grammarAccess.getModelAccess().getExperimentsExperimentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__PathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getPathSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getPathSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatasourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDatasourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__SourceTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatasourceAccess().getSourceTypeEDP2Keyword_3_0()); }
		(
			{ before(grammarAccess.getDatasourceAccess().getSourceTypeEDP2Keyword_3_0()); }
			'EDP2'
			{ after(grammarAccess.getDatasourceAccess().getSourceTypeEDP2Keyword_3_0()); }
		)
		{ after(grammarAccess.getDatasourceAccess().getSourceTypeEDP2Keyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datasource__SourceURIAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatasourceAccess().getSourceURISTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getDatasourceAccess().getSourceURISTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExperimentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__DesignAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentAccess().getDesignAlternatives_3_0()); }
		(rule__Experiment__DesignAlternatives_3_0)
		{ after(grammarAccess.getExperimentAccess().getDesignAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__ExperimentSpecificationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentAccess().getExperimentSpecificationsExperimentSpecificationsParserRuleCall_5_0()); }
		ruleExperimentSpecifications
		{ after(grammarAccess.getExperimentAccess().getExperimentSpecificationsExperimentSpecificationsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentSpecifications__SpecificationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsAlternatives_0()); }
		(rule__ExperimentSpecifications__SpecificationsAlternatives_0)
		{ after(grammarAccess.getExperimentSpecificationsAccess().getSpecificationsAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__ModeltypAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialModelAccess().getModeltypPCMKeyword_2_0()); }
		(
			{ before(grammarAccess.getInitialModelAccess().getModeltypPCMKeyword_2_0()); }
			'PCM'
			{ after(grammarAccess.getInitialModelAccess().getModeltypPCMKeyword_2_0()); }
		)
		{ after(grammarAccess.getInitialModelAccess().getModeltypPCMKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialModel__InitSpecificationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialModelAccess().getInitSpecificationsInitSpecificationsParserRuleCall_4_0()); }
		ruleInitSpecifications
		{ after(grammarAccess.getInitialModelAccess().getInitSpecificationsInitSpecificationsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitSpecifications__SpecificationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitSpecificationsAccess().getSpecificationsAlternatives_0()); }
		(rule__InitSpecifications__SpecificationsAlternatives_0)
		{ after(grammarAccess.getInitSpecificationsAccess().getSpecificationsAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllocationModel__AllocationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllocationModelAccess().getAllocationSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAllocationModelAccess().getAllocationSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageModel__UsageModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsageModelAccess().getUsageModelSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getUsageModelAccess().getUsageModelSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiddlewareRepository__MiddlewareRepositoryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMiddlewareRepositoryAccess().getMiddlewareRepositorySTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMiddlewareRepositoryAccess().getMiddlewareRepositorySTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventMiddlewareRepository__EventMiddelwareRepositoryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventMiddlewareRepositoryAccess().getEventMiddelwareRepositorySTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEventMiddlewareRepositoryAccess().getEventMiddelwareRepositorySTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitorRepository__MonitorRepositoryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitorRepositoryAccess().getMonitorRepositorySTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMonitorRepositoryAccess().getMonitorRepositorySTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__VariationTypAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationAccess().getVariationTypValueVariationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getVariationAccess().getVariationTypValueVariationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariationAccess().getVariationTypValueVariationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getVariationAccess().getVariationTypValueVariationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getVariationAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__TargetAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationAccess().getTargetIdentifierCrossReference_7_0()); }
		(
			{ before(grammarAccess.getVariationAccess().getTargetIdentifierIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariationAccess().getTargetIdentifierIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getVariationAccess().getTargetIdentifierCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__MaxVariationsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationAccess().getMaxVariationsINTTerminalRuleCall_10_0()); }
		RULE_INT
		{ after(grammarAccess.getVariationAccess().getMaxVariationsINTTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variation__ValueProviderAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationAccess().getValueProviderAlternatives_13_0()); }
		(rule__Variation__ValueProviderAlternatives_13_0)
		{ after(grammarAccess.getVariationAccess().getValueProviderAlternatives_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__MinAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMinINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMinINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__MaxAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxINTTerminalRuleCall_0_3_0()); }
		RULE_INT
		{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxINTTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__MinAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMinINTTerminalRuleCall_1_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMinINTTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedIntervalsValueProvider__MaxAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxINTTerminalRuleCall_1_4_0()); }
		RULE_INT
		{ after(grammarAccess.getNestedIntervalsValueProviderAccess().getMaxINTTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__ValuesAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__ValuesAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_0_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__ValuesAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_1_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetValueProvider__ValuesAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_1_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSetValueProviderAccess().getValuesINTTerminalRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__SummandAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearValueProviderAccess().getSummandINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getLinearValueProviderAccess().getSummandINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearValueProvider__FactorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearValueProviderAccess().getFactorINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getLinearValueProviderAccess().getFactorINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentialValueProvider__BaseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentialValueProviderAccess().getBaseINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getExponentialValueProviderAccess().getBaseINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__ExponentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolynomialValueProviderAccess().getExponentINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getPolynomialValueProviderAccess().getExponentINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolynomialValueProvider__FactorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolynomialValueProviderAccess().getFactorINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getPolynomialValueProviderAccess().getFactorINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__StopTypAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopTimeConditionAccess().getStopTypSimulationTimeKeyword_2_0()); }
		(
			{ before(grammarAccess.getStopTimeConditionAccess().getStopTypSimulationTimeKeyword_2_0()); }
			'simulationTime'
			{ after(grammarAccess.getStopTimeConditionAccess().getStopTypSimulationTimeKeyword_2_0()); }
		)
		{ after(grammarAccess.getStopTimeConditionAccess().getStopTypSimulationTimeKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopTimeCondition__StopParamAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopTimeConditionAccess().getStopParamINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getStopTimeConditionAccess().getStopParamINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__StopTypAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopCountConditionAccess().getStopTypMeasurementCountKeyword_2_0()); }
		(
			{ before(grammarAccess.getStopCountConditionAccess().getStopTypMeasurementCountKeyword_2_0()); }
			'measurementCount'
			{ after(grammarAccess.getStopCountConditionAccess().getStopTypMeasurementCountKeyword_2_0()); }
		)
		{ after(grammarAccess.getStopCountConditionAccess().getStopTypMeasurementCountKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopCountCondition__StopParamAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopCountConditionAccess().getStopParamINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getStopCountConditionAccess().getStopParamINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOfExperiments__NumberOfRepetitionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberOfExperimentsAccess().getNumberOfRepetitionsINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberOfExperimentsAccess().getNumberOfRepetitionsINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__SeedListsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSeedDefinitionAccess().getSeedListsListOfSeedsParserRuleCall_3_0()); }
		ruleListOfSeeds
		{ after(grammarAccess.getSeedDefinitionAccess().getSeedListsListOfSeedsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDefinition__SeedListsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSeedDefinitionAccess().getSeedListsListOfSeedsParserRuleCall_4_1_0()); }
		ruleListOfSeeds
		{ after(grammarAccess.getSeedDefinitionAccess().getSeedListsListOfSeedsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__SeedsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfSeedsAccess().getSeedsINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getListOfSeedsAccess().getSeedsINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfSeeds__SeedsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfSeedsAccess().getSeedsINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getListOfSeedsAccess().getSeedsINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExperimentDatasource__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentDatasourceAccess().getSourceDatasourceCrossReference_2_0()); }
		(
			{ before(grammarAccess.getExperimentDatasourceAccess().getSourceDatasourceIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExperimentDatasourceAccess().getSourceDatasourceIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getExperimentDatasourceAccess().getSourceDatasourceCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__ToolAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToolDefinitionAccess().getToolSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getToolDefinitionAccess().getToolSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToolDefinition__ConfigParamsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToolDefinitionAccess().getConfigParamsConfigurationParamsParserRuleCall_4_0()); }
		ruleConfigurationParams
		{ after(grammarAccess.getToolDefinitionAccess().getConfigParamsConfigurationParamsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationParamsAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConfigurationParamsAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationParams__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationParamsAccess().getValueConfigValueParserRuleCall_2_0()); }
		ruleConfigValue
		{ after(grammarAccess.getConfigurationParamsAccess().getValueConfigValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
